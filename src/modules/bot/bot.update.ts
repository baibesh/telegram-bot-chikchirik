import { Injectable } from '@nestjs/common';
import {
  Action,
  Ctx,
  Hears,
  InjectBot,
  On,
  Start,
  Update,
} from 'nestjs-telegraf';
import { Context, Telegraf } from 'telegraf';
import { BotService } from './bot.service';
import { SceneContext } from 'telegraf/typings/scenes';

@Injectable()
@Update()
export class BotUpdate {
  constructor(
    @InjectBot() private readonly bot: Telegraf<Context>,
    private readonly botService: BotService,
  ) {}

  @Start()
  async start(@Ctx() ctx: SceneContext & Context) {
    const greetingIcon = 'üëã';
    const message = `
${greetingIcon} <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ fastfast!</b>

–ú—ã —Å–≤—è–∑—ã–≤–∞–µ–º —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å –∑–∞–∫–∞–∑—á–∏–∫–∞–º–∏,
–æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±—ã—Å—Ç—Ä—ã–π –∏ —É–¥–æ–±–Ω—ã–π –ø–æ–∏—Å–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –¥–ª—è –≤–∞—à–∏—Ö –Ω—É–∂–¥.
    `;
    await ctx.replyWithHTML(message, {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '–Ø –∑–∞–∫–∞–∑—á–∏–∫', web_app: { url: 'http://app.firmachi.kz/' } },
            { text: '–Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', web_app: { url: 'http://app.firmachi.kz/' } }
          ]
        ]
      }
    });
  }

  @Hears('/menu')
  async menu(@Ctx() ctx: SceneContext & Context) {
    await ctx.reply('This is a menu', {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'Enter Base', callback_data: 'enter_base' }],
        ],
      },
    });
  }

  @Hears('/remove')
  async remove(@Ctx() ctx: SceneContext & Context) {
    await ctx.reply('Session is CLEAR');
    ctx.session = null;
  }

  @Action('enter_base')
  async enter_base(@Ctx() ctx: SceneContext & Context) {
    await ctx.scene.enter('base');
  }

  @On('message')
  async echo(@Ctx() ctx: SceneContext & Context) {
    await ctx.reply(JSON.stringify(ctx.message, null, '\t'));
  }

  @On('my_chat_member')
  async onMyChatMember(@Ctx() ctx: Context) {
    const myChatMember = ctx.myChatMember;
    if (myChatMember) {
      const chatId = myChatMember.chat?.id;
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å - "member" –∏–ª–∏ "administrator", –∑–Ω–∞—á–∏—Ç –±–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω
      const newStatus = myChatMember.new_chat_member?.status;
      if (newStatus === 'member' || newStatus === 'administrator') {
        console.log(`–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç —Å id: ${chatId}`);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å chatId –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
      }
    }
  }
}
