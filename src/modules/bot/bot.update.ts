import { Injectable } from '@nestjs/common';
import {
  Action,
  Ctx,
  Hears,
  InjectBot,
  On,
  Start,
  Update,
} from 'nestjs-telegraf';
import { Context, Telegraf } from 'telegraf';
import { BotService } from './bot.service';
import { SceneContext } from 'telegraf/typings/scenes';

@Injectable()
@Update()
export class BotUpdate {
  constructor(
    @InjectBot() private readonly bot: Telegraf<Context>,
    private readonly botService: BotService,
  ) {}

  @Start()
  async start(@Ctx() ctx: SceneContext & Context) {
    const message = `
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø ‚Äî –ß–∏–∫-–ß–∏—Ä–∏–∫, —Ç–≤–æ—è –±—ã—Å—Ç—Ä–∞—è –ø—Ç–∏—á–∫–∞-–∫—É—Ä—å–µ—Ä!

üê¶ –Ø –ø–æ–º–æ–≥–∞—é –∑–∞–∫–∞–∑—á–∏–∫–æ–º –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π. 

üëá–í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π!
    `;
    await ctx.replyWithHTML(message, {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '–Ø –∑–∞–∫–∞–∑—á–∏–∫', web_app: { url: 'https://mini.firmachi.kz/' } },
            { text: '–Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', callback_data: 'become_performer' }
          ]
        ]
      }
    });
  }

  @Action('become_performer')
  async becomePerformer(@Ctx() ctx: SceneContext & Context) {
    const message = `
üì¢ <b>–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π!</b>

‚úÖ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: <a href="https://t.me/chikchirikbird">@chikchirikbird</a>

üë§ –¢–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, —á—Ç–æ–±—ã –∑–∞–∫–∞–∑—á–∏–∫–∏ –º–æ–≥–ª–∏ –≤–∏–¥–µ—Ç—å –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

üîΩ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:
    `;

    await ctx.answerCbQuery();
    await ctx.replyWithHTML(message, {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª', url: 'https://t.me/chikchirikbird' }
          ],
          [
            { text: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', web_app: { url: 'https://mini.firmachi.kz/become-performer' } }
          ]
        ]
      }
    });
  }

  @On('my_chat_member')
  async onMyChatMember(@Ctx() ctx: Context) {
    const myChatMember = ctx.myChatMember;
    if (myChatMember) {
      const chatId = myChatMember.chat?.id;
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å - "member" –∏–ª–∏ "administrator", –∑–Ω–∞—á–∏—Ç –±–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω
      const newStatus = myChatMember.new_chat_member?.status;
      if (newStatus === 'member' || newStatus === 'administrator') {
        console.log(`–ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç —Å id: ${chatId}`);
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å chatId –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
      }
    }
  }
}
